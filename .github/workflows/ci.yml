name: CI
on:
  push:
    branches: [ master ]   # 確認你的預設分支真的是 master；若是 main 要同步改
  pull_request:
    branches: [ master ]

# 最小權限 + 同分支只跑最新一次
permissions:
  contents: read
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 15 #單個 job 最多跑 15 分鐘，超時會自動中止。
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }} # 這段是要指定 Python 版本
          cache: pip  # 直接用內建 pip 快取（會依 requirements* 與版本分開）

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install pytest flake8 black

      - name: Format check (black)
        run: python -m black --check .

      - name: Lint code
        run: python -m flake8 . --format=github # flake8 直接回饋到 PR（GitHub annotation）

      - name: Run tests 
        run: python -m pytest -q --maxfail=1 --disable-warnings --junitxml=pytest.xml
      - name: Upload test report 
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.python-version }} 
          path: pytest.xml
